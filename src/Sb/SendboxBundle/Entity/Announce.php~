<?php

namespace Sp\SpotoraBundle\Entity;

use Gedmo\Mapping\Annotation as Gedmo;
use Doctrine\ORM\Mapping as ORM;

/**
 * Sp\SpotoraBundle\Entity\Announce
 *
 * @ORM\Table()
 * @ORM\Entity(repositoryClass="Sp\SpotoraBundle\Repository\AnnounceRepository")
 */
class Announce
{

    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @ORM\ManyToOne(targetEntity="User", inversedBy="announces", cascade={"remove"})
     * @ORM\JoinColumn(name="user_id", referencedColumnName="id")
     */
    private $user;

    /**
     * @ORM\ManyToOne(targetEntity="Category", inversedBy="announces", cascade={"remove"})
     * @ORM\JoinColumn(name="category_id", referencedColumnName="id")
     */
    private $category;
    
    /**
     * @ORM\OneToMany(targetEntity="Media", mappedBy="announce", cascade={"remove", "persist"})
     */
    private $medias;

    /**
     * @ORM\Column(name="title", length=255, type="string")
     */
    private $title;

    /**
     * @ORM\Column(name="description", type="text")
     */
    private $description;

    /**
     * @ORM\ManyToOne(targetEntity="Location", inversedBy="announces", cascade={"remove"})
     * @ORM\JoinColumn(name="location_id", referencedColumnName="id")
     */
    private $location;

    /**
     * @ORM\Column(name="price", nullable=true, type="integer")
     */
    private $price;

    /**
     * @ORM\Column(name="phone", length=255, nullable=true, type="string")
     */
    private $phone;

    /**
     * @ORM\Column(name="email", length=255, nullable=true, type="string")
     */
    private $email;

    /**
     * @ORM\Column(name="tags", length=255, nullable=true, type="string")
     */
    private $tags;

    /**
     * @ORM\Column(name="kind", type="boolean")
     */
    private $kind = 0;
    
    /**
     * @ORM\Column(length=128, unique=true)
     * @Gedmo\Slug(fields={"title"})
     */
    private $slug;
    
    /**
     * @ORM\Column(name="thumbnail", length=255, type="string")
     */
    private $thumbnail;

    /**
     * @ORM\Column(name="viewer", type="integer")
     */
    private $viewer = 0;

    /**
     * @ORM\Column(name="popular", type="integer")
     */
    private $popular = 0;

    /**
     * @ORM\Column(name="is_published", type="boolean")
     */
    private $is_published = 0;

    /**
     * @ORM\Column(name="is_moderated", type="boolean")
     */
    private $is_moderated = 0;

    /**
     * @ORM\Column(name="is_private", type="boolean")
     */
    private $is_private = 0;

    /**
     * @ORM\Column(name="is_spam", type="boolean")
     */
    private $is_spam = 0;

    /**
     * @ORM\Column(name="finished_at", nullable=true, type="datetime")
     */
    private $finished_at;
    
    /**
     * @ORM\Column(name="created_at",type="datetime")
     * @Gedmo\Timestampable(on="create")
     */
    private $created_at;
    
     /**
     * @ORM\Column(name="updated_at",type="datetime")
     * @Gedmo\Timestampable(on="update")
     */
    private $updated_at;


    /**
     * Get id
     *
     * @return string 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set user
     *
     * @param string $user
     */
    public function setUser($user)
    {
        $this->user = $user;
    }

    /**
     * Get user
     *
     * @return string 
     */
    public function getUser()
    {
        return $this->user;
    }

    /**
     * Set title
     *
     * @param string $title
     */
    public function setTitle($title)
    {
        $this->title = $title;
    }

    /**
     * Get title
     *
     * @return string 
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * Set description
     *
     * @param string $description
     */
    public function setDescription($description)
    {
        $this->description = $description;
    }

    /**
     * Get description
     *
     * @return string 
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Set location
     *
     * @param string $location
     */
    public function setLocation($location)
    {
        $this->location = $location;
    }

    /**
     * Get location
     *
     * @return string 
     */
    public function getLocation()
    {
        return $this->location;
    }

    /**
     * Set price
     *
     * @param string $price
     */
    public function setPrice($price)
    {
        $this->price = $price;
    }

    /**
     * Get price
     *
     * @return string 
     */
    public function getPrice()
    {
        return $this->price;
    }

    /**
     * Set phone
     *
     * @param string $phone
     */
    public function setPhone($phone)
    {
        $this->phone = $phone;
    }

    /**
     * Get phone
     *
     * @return string 
     */
    public function getPhone()
    {
        return $this->phone;
    }

    /**
     * Set email
     *
     * @param string $email
     */
    public function setEmail($email)
    {
        $this->email = $email;
    }

    /**
     * Get email
     *
     * @return string 
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Set medias
     *
     * @param string $medias
     */
    public function setMedias($medias)
    {
        $this->medias = $medias;
    }

    /**
     * Get medias
     *
     * @return string 
     */
    public function getMedias()
    {
        return $this->medias;
    }

    /**
     * Set tags
     *
     * @param string $tags
     */
    public function setTags($tags)
    {
        $this->tags = $tags;
    }

    /**
     * Get tags
     *
     * @return string 
     */
    public function getTags()
    {
        return $this->tags;
    }

    /**
     * Set kind
     *
     * @param string $kind
     */
    public function setKind($kind)
    {
        $this->kind = $kind;
    }

    /**
     * Get kind
     *
     * @return string 
     */
    public function getKind()
    {
        return $this->kind;
    }

    /**
     * Set slug
     *
     * @param string $slug
     */
    public function setSlug($slug)
    {
        $this->slug = $slug;
    }

    /**
     * Get slug
     *
     * @return string 
     */
    public function getSlug()
    {
        return $this->slug;
    }

    

    /**
     * Set popular
     *
     * @param string $popular
     */
    public function setPopular($popular)
    {
        $this->popular = $popular;
    }

    /**
     * Get popular
     *
     * @return string 
     */
    public function getPopular()
    {
        return $this->popular;
    }

    /**
     * Set is_published
     *
     * @param string $isPublished
     */
    public function setIsPublished($isPublished)
    {
        $this->is_published = $isPublished;
    }

    /**
     * Get is_published
     *
     * @return string 
     */
    public function getIsPublished()
    {
        return $this->is_published;
    }

    /**
     * Set is_moderated
     *
     * @param string $isModerated
     */
    public function setIsModerated($isModerated)
    {
        $this->is_moderated = $isModerated;
    }

    /**
     * Get is_moderated
     *
     * @return string 
     */
    public function getIsModerated()
    {
        return $this->is_moderated;
    }

    /**
     * Set is_private
     *
     * @param string $isPrivate
     */
    public function setIsPrivate($isPrivate)
    {
        $this->is_private = $isPrivate;
    }

    /**
     * Get is_private
     *
     * @return string 
     */
    public function getIsPrivate()
    {
        return $this->is_private;
    }

    /**
     * Set is_spam
     *
     * @param string $isSpam
     */
    public function setIsSpam($isSpam)
    {
        $this->is_spam = $isSpam;
    }

    /**
     * Get is_spam
     *
     * @return string 
     */
    public function getIsSpam()
    {
        return $this->is_spam;
    }

    /**
     * Set finished_at
     *
     * @param datetime $finishedAt
     */
    public function setFinishedAt($finishedAt)
    {
        $this->finished_at = $finishedAt;
    }

    /**
     * Get finished_at
     *
     * @return datetime 
     */
    public function getFinishedAt()
    {
        return $this->finished_at;
    }

    /**
     * Set created_at
     *
     * @param datetime $createdAt
     */
    public function setCreatedAt($createdAt)
    {
        $this->created_at = $createdAt;
    }

    /**
     * Get created_at
     *
     * @return datetime 
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }

    /**
     * Set updated_at
     *
     * @param datetime $updatedAt
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->updated_at = $updatedAt;
    }

    /**
     * Get updated_at
     *
     * @return datetime 
     */
    public function getUpdatedAt()
    {
        return $this->updated_at;
    }

    /**
     * Set category
     *
     * @param $category
     */
    public function setCategory($category)
    {
        $this->category = $category;
    }

    /**
     * Get category
     *
     * @return Sp\SpotoraBundle\Entity\Category 
     */
    public function getCategory()
    {
        return $this->category;
    }
    
    public function __construct()
    {
        $this->medias = new \Doctrine\Common\Collections\ArrayCollection();
    }
    
    /**
     * Add medias
     *
     * @param Sp\SpotoraBundle\Entity\Media $medias
     */
    public function addMedia(\Sp\SpotoraBundle\Entity\Media $medias)
    {
        $this->medias[] = $medias;
    }

    /**
     * Set viewer
     *
     * @param string $viewer
     */
    public function setViewer($viewer)
    {
        $this->viewer = $viewer;
    }

    /**
     * Get viewer
     *
     * @return string 
     */
    public function getViewer()
    {
        return $this->viewer;
    }

    /**
     * Set thumbnail
     *
     * @param string $thumbnail
     */
    public function setThumbnail($thumbnail)
    {
        $this->thumbnail = $thumbnail;
    }

    /**
     * Get thumbnail
     *
     * @return string 
     */
    public function getThumbnail()
    {
        if($this->thumbnail)
          return '/bundles/spspotora/uploads/thumb/'.$this->thumbnail;
        else
          return '/bundles/spspotora/images/default/thumbnail.png';
    }
    
    

    /**
     * Set user_id
     *
     * @param Sp\SpotoraBundle\Entity\User $userId
     */
    public function setUserId(\Sp\SpotoraBundle\Entity\User $userId)
    {
        $this->user_id = $userId;
    }

    /**
     * Get user_id
     *
     * @return Sp\SpotoraBundle\Entity\User 
     */
    public function getUserId()
    {
        return $this->user_id;
    }
}